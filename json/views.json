{
    "title":"View",
    "description":"View is a displayable object (Uxi) that also can act as a controller.",
    "oml":{
        "selector:Views.MyView":"{CONFIG}"
    },
    "demoml":{
        "#instance:Templates.Quad":{
            "node:OML":{
                "#item0:Views.Balls":{
                    "css":"balls",
                    "template":"Balls",
                    "data":{"name":"View A"}
                },
                "#item1:Views.Balls":{
                    "css":"balls",
                    "template":"Balls",
                    "data":{"name":"View B"}
                },
                "#item2:Views.Balls":{
                    "css":"balls",
                    "template":"Balls",
                    "data":{"name":"View C"}
                },
                "#item3:Views.Balls":{
                    "css":"balls",
                    "template":"Balls",
                    "data":{"name":"View D"}
                }
            }
        }        
    },
    "doc":{
        "extends":["Uxi", "Touch"],
        "properties":[
            {"name":"container", "type":"string", "desc":"selector where to create this object"},
            {"name":"group_by", "type":"string", "desc":"the common property to group items"},
            {"name":"group_mode", "type":"*", "desc":"the grouping mode"},
            {"name":"group_order", "type":"array", "desc":"an optional group order"},
            {"name":"group_param", "type":"string", "desc":"grouping parameter"},
            {"name":"sort", "type":"string", "desc":"if set, a common property to sort the list"},
            {"name":"list", "type":"array", "desc":"List of objects"},
            {"name":"key", "type":"boolean", "desc":"a common property defining a unique value to use as key"},
            {"name":"swipe", "type":"boolean", "desc":"if items of the list are swipe-able"},
            {"name":"reorder", "type":"boolean", "desc":"if the list is reorder-able"},
            {"name":"display", "type":"OGX.Display", "desc":"the display to use to render the items"},
            {"name":"mode", "type":"constant", "desc":"the DynamicList select mode"}
            
        ],
        "methods":[
            {"name":"val", "desc":"set or retrieve the current value"},
            {"name":"bind", "desc":"bind other components to it"},
            {"name":"unbind", "desc":"unbind other components from it"},
            {"name":"filter", "desc":"filter nests' lists"},
            {"name":"unfilter", "desc":"unfilter nests' lists"},
            {"name":"addFilter", "desc":"add filter"},
            {"name":"removeFilter", "desc":"remove filter"},
            {"name":"resetFilters", "desc":"remove all filters"},
            {"name":"getFilters", "desc":"get filters in use"},
            {"name":"addItem", "desc":"add to base list"},
            {"name":"removeItem", "desc":"remove from base list"},
            {"name":"replaceItem", "desc":"replace from base list"},
            {"name":"updateItem", "desc":"update in base list"},
            {"name":"addToGroup", "desc":"add an item to a group"},
            {"name":"removeFromGroup", "desc":"remove an item from a group"},
            {"name":"updateGroupItem", "desc":"update an item inside a group"},
            {"name":"replaceGroupItem", "desc":"replace an item inside a group"},
            {"name":"getGroupList", "desc":"retrieve the DynamicList given a group"},
            {"name":"render", "desc":"render the component"},
            {"name":"refresh", "desc":"refresh the component"},
            {"name":"getNested", "desc":"retrieve the OGX.NestedList instance"},
            {"name":"destroy", "desc":"destroy the component"}
        ],
        "events":[
            {"name":"OGX.GroupedList.SELECT", "desc":"when an item of the list is selected"}
        ]
    } 
}